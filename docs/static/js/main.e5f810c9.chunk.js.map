{"version":3,"sources":["DateSelector.js","SignupForm.js","DaysOld.js","Unsubscribe.js","App.js","serviceWorker.js","index.js"],"names":["DateSelector","props","now","Date","state","date","date_iso8601","toISOString","slice","setDate","setState","id","selected","this","onChange","dateFormatCalendar","minDate","maxDate","showYearDropdown","showMonthDropdown","dropdownMode","to","className","type","name","href","React","Component","SignUpForm","submitted","submit_success","pending","validate","dob","handleSubmit","bind","event","preventDefault","stopPropagation","currentTarget","checkValidity","data","FormData","target","email","get","fetch","method","headers","body","JSON","stringify","then","catch","e","md","span","offset","Body","Title","Text","Subtitle","toDateString","noValidate","validated","onSubmit","Group","controlId","Control","required","maxLength","placeholder","variant","disabled","render_submitted_success","render_submitted_failure","render_unsubmitted","DaysOld","match","params","err","days_old","Math","floor","next_big_milestone","candidate_small_milestones","push","candidate","forEach","m","next_small_milestone","sort","a","b","next_big_milestone_date","getDate","next_small_milestone_date","render_valid_date","render_invalid_date","Unsubscribe","success","render_pending","render_success","render_fail","App","bg","fixed","expand","Brand","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5f810c9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Link } from \"react-router-dom\";\n\nclass DateSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        let now = new Date();\n        this.state = {\n            date: now,\n            date_iso8601: now.toISOString().slice(0,10)\n        };\n        this.setDate = date => { \n            this.setState({\n                date: date,\n                date_iso8601: date.toISOString().slice(0,10)\n            });\n        };\n    }\n\n    render() {\n        return (\n        <div>\n            <h2>\n                HOW MANY DAYS\n                <br />\n                OLD ARE YOU?\n            </h2>\n\n            <p id=\"what_dob\">\n                WHAT'S YOUR\n                <br />\n                DATE OF BIRTH?\n            </p>\n\n            <div>\n                <DatePicker \n                    selected={this.state.date}\n                    onChange={date => this.setDate(date)}\n                    dateFormatCalendar={\"MMM yyy\"}\n                    minDate={new Date(\"1850-01-01\")}\n                    maxDate={new Date()}\n                    showYearDropdown\n                    showMonthDropdown\n                    dropdownMode=\"select\"\n                />\n            </div>\n\n            <Link to={`/date/${this.state.date_iso8601}`}>\n                <button className=\"button\" id=\"submit\" type=\"submit\" name=\"submit\">LET'S&nbsp;GO</button>\n            </Link>\n\n            <p className=\"footer\"> \n               Do you like podcasts? Get the best podcast recommendations from <a href=\"https://thelistener.substack.com/c/days-old\" className=\"footer_link\">The Listener</a> with this special free gift.\n            </p>\n        </div>\n        );\n    }\n}\n\nexport default DateSelector\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nclass SignUpForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            submitted: false,\n            submit_success: false,\n            pending: false,\n            validate: false,\n            dob: props.date.toISOString().slice(0,10),\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState({validate: true});\n\n        if (event.currentTarget.checkValidity() === false) {\n            return;\n        }\n\n        let data = new FormData(event.target);\n        let email = data.get(\"email\");\n        let name = data.get(\"name\");\n        \n        fetch(\"https://api.daysold.com/subscribe\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json;charset=utf-8' },\n                body: JSON.stringify({dob: this.state.dob, name: name, email: email})\n            }\n        ).then(() => {this.setState({submitted: true, submit_success: true, pending: false})})\n        .catch(e => {this.setState({submitted: true, submit_success: false, pending: false})})\n        \n        this.setState({pending: true})\n    }\n\n    render_submitted_success() {\n        return (\n        <Row>\n        <Col md={{span: 4, offset: 4}}>\n        <Card>\n        <Card.Body>\n            <Card.Title>THANK YOU!</Card.Title>\n            <i className=\"pink-icon fas fa-envelope-open-text fa-5x\"></i>\n            <Card.Text>You will now receive email reminders for your upcoming milestones.</Card.Text>\n        </Card.Body>\n        </Card>\n        </Col>\n        </Row>\n        );\n    }\n\n    render_submitted_failure() {\n        return (\n        <Row>\n        <Col md={{span: 4, offset: 4}}>\n        <Card>\n        <Card.Body>\n            <Card.Title>WE'RE SORRY!</Card.Title>\n            <i className=\"pink-icon fas fa-exclamation-triangle fa-5x\"></i>\n            <Card.Text>Something went wrong, and we were unable to sign you up for email reminders. Please try again later.</Card.Text>\n        </Card.Body>\n        </Card>\n        </Col>\n        </Row>\n        );\n    }\n\n    render_unsubmitted() {\n        return (\n        <Row>\n        <Col md={{span: 4, offset: 4}}>\n        <Card>\n        <Card.Body>\n        <Card.Subtitle>Were you born on {this.props.date.toDateString()}? Get an email reminder for your next milestone.</Card.Subtitle>\n                <Form noValidate className=\"pad-form\" validated={this.state.validate} onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"formName\">\n                      <Form.Control required maxLength=\"50\" name=\"name\" type=\"text\" placeholder=\"Name\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formEmail\">\n                      <Form.Control required name='email' type=\"email\" placeholder=\"E-mail\" />\n                    </Form.Group>\n\n                    <Button variant=\"outline-dark flat\" type=\"submit\" disabled={this.state.pending}>\n                      GET EMAIL REMINDERS\n                    </Button>\n                </Form>\n        </Card.Body>\n        </Card>\n        </Col>\n        </Row>\n        );\n    }\n\n    render() {\n        if (this.state.submitted && this.state.submit_success) {\n            return this.render_submitted_success();\n        } else if (this.state.submitted & !this.state.submit_success) {\n            return this.render_submitted_failure();\n        } else {\n            return this.render_unsubmitted();\n        }\n    }\n}\n\nexport default SignUpForm\n","import React from 'react';\nimport './App.css';\nimport SignUpForm from './SignupForm.js';\nimport { Link } from \"react-router-dom\";\n\nclass DaysOld extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let date;\n        let date_iso8601;\n\n        try {\n            date = new Date(props.match.params.date);\n            date_iso8601 = date.toISOString().slice(0,10);\n        } catch(err) { \n            date = null;\n        }\n\n        // Validate user input\n        if (date && date_iso8601 === props.match.params.date) {\n            this.state = {\n                date: date,\n                date_iso8601: date_iso8601\n            }\n        } else {\n            this.state = { date: null };\n            return;\n        }\n\n        // Find how many days old the user is and upcoming milestones\n        let now = new Date();\n        let day_ms = 86400000\n\n        let days_old = Math.floor((now - date) / day_ms);\n        let next_big_milestone = Math.floor(days_old / 5000) * 5000 + 5000;\n\n        let candidate_small_milestones = []\n\n        if (days_old < 900) {\n            candidate_small_milestones.push(Math.floor(days_old / 100) * 100 + 100);\n        } else {\n            let candidate = Math.floor(days_old / 1000) * 1000 + 1000;\n            if (candidate % 5000 !== 0) { \n                candidate_small_milestones.push(candidate);\n            } else {\n                candidate_small_milestones.push(candidate + 1000);\n            }\n        }\n\n        [7777, 11111, 12345, 22222].forEach(m => { if (days_old < m) candidate_small_milestones.push(m) });\n\n        let next_small_milestone = candidate_small_milestones.sort((a,b) => a-b)[0];\n        \n        this.state.days_old = days_old;\n        this.state.next_big_milestone = next_big_milestone;\n        this.state.next_big_milestone_date = new Date();\n        this.state.next_big_milestone_date.setDate(date.getDate() + next_big_milestone - days_old);\n        this.state.next_small_milestone = next_small_milestone;\n        this.state.next_small_milestone_date = new Date();\n        this.state.next_small_milestone_date.setDate(date.getDate() + next_small_milestone - days_old);\n    }\n\n    render_invalid_date() {\n        return (\n            <div>\n                <h2>WE'RE SORRY</h2>\n                <i className=\"pink-icon fa fa-calendar-times fa-5x app_icon\"></i>\n                <p className=\"app_text\">WE DON'T RECOGNIZE THAT DATE</p>\n                <Link to=\"/\">\n                    <button className=\"button\" id=\"submit\" type=\"submit\" name=\"submit\">TO THE FRONT PAGE</button>\n                </Link>\n            </div>\n        );\n    }\n\n    render_valid_date() {\n        return (\n            <div>\n                <p id=\"today_you_are\">\n                    TODAY YOU ARE\n                    <br />\n                    <span id=\"days_old_output\" className=\"emphasis\">{this.state.days_old}</span>\n                    <br />\n                    DAYS OLD\n                </p>\n\n                <p>&mdash;<span id=\"upcoming_milestones\">UPCOMING MILESTONES</span>&mdash;</p>\n\n                <p className=\"you_will_be\">\n                    YOU WILL BE \n                    <br />\n                    <span id=\"small_milestone_output\" className=\"emphasis\">{this.state.next_small_milestone}</span> DAYS OLD\n                    <br /> \n                    ON <span className=\"emphasis\" id=\"small_milestone_date_output\">{this.state.next_small_milestone_date.toDateString()}</span> \n                </p>\n\n                <p className=\"you_will_be\">\n                    YOU WILL BE\n                    <br />\n                    <span id=\"big_milestone_output\" className=\"emphasis\">{this.state.next_big_milestone}</span> DAYS OLD\n                    <br />\n                    ON <span className=\"emphasis\" id=\"big_milestone_date_output\">{this.state.next_big_milestone_date.toDateString()}</span>\n                </p>\n\n                <SignUpForm date={this.state.date} />\n\n                <Link to=\"/\">\n                    <button className=\"button\" id=\"submit\" type=\"submit\" name=\"submit\">START OVER</button>\n                </Link>\n\n                <p className=\"footer\"> \n                   Do you like podcasts? Get the best podcast recommendations from <a href=\"https://thelistener.substack.com/c/days-old\" className=\"footer_link\">The Listener</a> with this special free gift.\n                </p>\n\n            </div>\n        );\n    }\n\n    render() {\n        if (!this.state.date) {\n            return this.render_invalid_date();\n        }\n\n        return this.render_valid_date();\n    }\n}\n\nexport default DaysOld\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Unsubscribe extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pending: true,\n            success: false\n        }\n    }\n\n    componentDidMount() {\n        let url = \"https://api.daysold.com/unsubscribe\";\n        let id = this.props.match.params.id;\n\n        fetch(`${url}/${id}`, { method: \"DELETE\" })\n        .then(() => this.setState({pending: false, success: true}))\n        .catch(e => this.setState({pending: false, success: false}))\n\n    }\n\n    render_pending() {\n        return (\n            <div>\n                <h2>UNSUBSCRIBING...</h2>\n                <i className=\"pink-icon fas fa-spinner fa-pulse fa-9x\"></i>\n            </div>\n        );\n    }\n\n    render_success() {\n        return (\n            <div>\n                <h2>SUCCESS</h2>\n                <i className=\"pink-icon fa fa-check-circle fa-5x app_icon\"></i>\n                <p className=\"app_text\">YOU HAVE BEEN UNSUBSCRIBED<br />FROM FUTURE MILESTONE NOTIFICATIONS</p>\n                <Link to=\"/\">\n                    <button className=\"button\" id=\"submit\" type=\"submit\" name=\"submit\">TO THE FRONT PAGE</button>\n                </Link>\n            </div>\n        );\n    }\n\n    render_fail() {\n        return (\n            <div>\n                <h2>WE'RE SORRY</h2>\n                <i className=\"pink-icon fa fa-exclamation-triangle fa-5x app_icon\"></i>\n                <p className=\"app_text\">WE'RE HAVING SOME TECHNICAL DIFFICULTIES.<br />PLEASE TRY AGAIN LATER.</p>\n                <Link to=\"/\">\n                    <button className=\"button\" id=\"submit\" type=\"submit\" name=\"submit\">TO THE FRONT PAGE</button>\n                </Link>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.state.pending) {\n            return this.render_pending();\n        }\n\n        if (this.state.success) {\n            return this.render_success();\n        }\n\n        return this.render_fail();\n    }\n}\n\nexport default Unsubscribe\n","import React from 'react';\nimport './App.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DateSelector from './DateSelector';\nimport DaysOld from './DaysOld';\nimport Unsubscribe from './Unsubscribe';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <Router>\n                <div>\n                <Navbar bg=\"light\" fixed=\"top\" expand=\"lg\">\n                    <Navbar.Brand className=\"unselectable mx-auto\">\n                        <Link to=\"/\">DAYSOLD.COM</Link>\n                    </Navbar.Brand>\n                </Navbar>\n                <Container>\n                    <Row>\n                        <Col className=\"page-content\">\n                            <Route path=\"/\" exact component={DateSelector} />\n                            <Route path=\"/date/:date\" exact component={DaysOld} />\n                            <Route path=\"/unsubscribe/:id\" exact component={Unsubscribe} />\n                        </Col>\n                    </Row>\n                </Container>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}